install.packages("lme4")
install.packeges("car")
install.packages("car")
install.packages("Hmci")
install.packages("Hmisc")
install.packages("mnormt")
install.packages("psyhpy")
install.packages("psyphy")
install.packages("plyr")
install.packages("pdyphy")
install.packages("phyphy")
install.packages("psyphy")
q()
install.packages("psyphy")
setInternet2(use = TRUE)
install.packages("psyphy",repos="http://R-Forge.R-project.org", type="source")
install.packages("psyphy")
install.packages("ggplot2")
internet2
install.packages("httr")
capabilities()["libcurl"]
setInternet2(TRUE)
install.packages("httr")
install.packages("swirl", repos="http://cran.rstudio.com/", dependencies=TRUE)
install.packages("nnet", repos="http://cran.rstudio.com/", dependencies=TRUE)
install.packages("ggplot2")
install.packages("ggplot2", dependencies=TRUE)
install.packages("stringr")
2+2
library(ggplot2)
library(ggplot2)#
library(dplyr)#
#
people = 11#c(1,2,3,4,5,11)#
dat = data.frame()#
for (person in people)#
{#
    pdat = rbind(read.csv(paste('../results/', person, 'results.txt', sep='')),read.csv('../results/2results.txt')) #
    dat = rbind(dat, pdat)#
    rm(pdat)#
}#
# tell R that person and targetPresent are categorical factors#
dat$person = as.factor(dat$person)#
dat$targetPresent = as.factor(dat$targetPresent)#
levels(dat$block) = c("coloured", "uncoloured")#
#
# remove response = 3 (timed out?)#
dat = filter(dat, response!=3)#
#
# display number of incorrect trials - should be low!#
print(paste("misses:", 100*nrow(filter(dat, targetPresent==1, response==-1))/nrow(dat)))#
print(paste("false pos:", 100*nrow(filter(dat, targetPresent==0, response==1))/nrow(dat)))#
#
# remove incorrect trials from data#
dat = rbind(filter(dat, targetPresent==1, response==1), filter(dat, targetPresent==0, response==-1))#
#
dat$trialNumber = as.factor(dat$trialNumber)#
dat = filter(dat, block=='coloured')#
#
# dat$responseTime = log(dat$responseTime)#
# compute mean of median and 95% CI#
aggData = (dat #
  %>% group_by(person, block, visualise, trialNumber) #
    %>% summarise(#
     nTrials = length(responseTime),#
     meanRT     = mean(responseTime),#
     medianRT   = median(responseTime), #
     stddev     = sd(responseTime),#
     stderr=stddev/sqrt(nTrials),#
     lower=meanRT-1.96*stderr,#
     upper=meanRT+1.96*stderr))#
#
# plot! #
#
plt = ggplot(aggData, aes(x=trialNumber, y=meanRT, ymin=lower, ymax=upper, colour=visualise, group=visualise))#
plt = plt + geom_path() + geom_errorbar()#
plt = plt + geom_path(aes(y=medianRT), linetype=2)#
plt = plt + facet_wrap(~person, scales='free_y') + theme_bw()#
plt = plt +  scale_colour_brewer(palette="Set1")#
ggsave("pilotResults.pdf", height=4, width=8)#
plt#
# # sample to get CI estimates #
# ii = 0#
# for (n in seq(6,72,6))#
# {#
#     ii = ii + 1#
# sdat = dat[sample(x=nrow(dat), size=n),]#
# m[ii] = mean(sdat$responseTime)#
# stderr[ii] = sd(sdat$responseTime)/sqrt(n)#
#
# }#
# plt = ggplot(data.frame(m = m, n=seq(6,72,6), lower=m-1.96*stderr, upper=m+1.96*stderr), aes(x=n, y=m, ymin=lower, ymax=upper))#
# plt = plt + geom_errorbar() + geom_point() + scale_y_continuous(limits=c(0.3,0.7))#
# plt
install.packages("dplyr")
library(lme4)
library(ggplot2)#
library(lme4)#
library(car)#
people = c(1,2,3,4,5,6,7,8,9,11)#
alldat = data.frame(participantNumber=character(), trialNum=numeric(), TargetPresent=numeric(), beta=numeric(), seed=numeric(), r=numeric(), phi=numeric(), response=numeric()) #
for (person in people)#
{#
    dat = read.csv(paste("../results/ac_", person, "_td.txt", sep=""))#
    if (person == 7)#
    {#
        # there's a bug in the data causing participantNumber to = 6 for particiapnt 7!#
        dat$participantNumber = 7#
    }#
    if (person == 4)#
    {#
        # they got their numbers the wrong way around#
        dat$respose = 1-dat$respose#
    }#
#
    names(dat)[8] = "response"#
    alldat = rbind(alldat, dat)#
}#
#
visdeg = 60*tan(54.2/57)/(1920*pi)#
#
alldat$beta <- factor(as.numeric(alldat$beta), labels =c("rough", "medium", "smooth"))#
alldat$phi <- pi/180 * alldat$phi#
alldat$r <- alldat$r * visdeg#
alldat$x <- alldat$r*sin(alldat$phi)#
alldat$y <- alldat$r*cos(alldat$phi)#
alldat$x2 <- alldat$x^2#
alldat$y2 <- alldat$y^2#
alldat$participantNumber = as.factor(alldat$participantNumber)#
alldat$TargetPresent = as.factor(alldat$TargetPresent)#
alldat$rejTrial = as.numeric(alldat$response == -1)#
summary((aggregate(data=alldat, rejTrial~participantNumber, FUN=mean)))#
alldat = alldat[-which(alldat$response==-1),]#
alldat = alldat[-which(alldat$response==2),]#
accdat = aggregate(data=alldat, response~participantNumber+beta+TargetPresent, FUN=mean)#
summary(aggregate(data=alldat[which(alldat$TargetPresent==0),], response~participantNumber, FUN=mean))#
levels(accdat$TargetPresent) = c("target absent", "target present")#
accdat$response[which(accdat$TargetPresent=="target absent")] = 1- accdat$response[which(accdat$TargetPresent=="target absent")] #
fpplt = ggplot(accdat, aes(x=participantNumber, y=response, fill=beta)) + geom_bar(stat="identity", position=position_dodge())+facet_wrap(~TargetPresent)#
fpplt = fpplt + scale_y_continuous(name="accuracy",breaks=c(seq(0,1,0.1))) + theme_bw()#
fpplt = fpplt + scale_x_discrete(name="participant ID")#
ggsave("targDetFalsePositive.pdf", width=10, height=4)#
#
targPres = subset(alldat, TargetPresent==1 & response!=-1 & response!=2)#
#
targPres2 <- aggregate(response ~ participantNumber+ beta+r, targPres, FUN="mean")#
tmp <- aggregate(response ~ beta+r, targPres, FUN="var")#
targPres2$stderr = sqrt(tmp$response/9)#
plt1 <- ggplot(targPres2, aes(x=r, y=response, colour=beta)) + geom_smooth(method="glm", family="binomial", se=F) + geom_point(position = position_jitter(w = 0.15, h = 0.0))#
plt1 <- plt1 + scale_y_continuous(name="p(target detected)")  +scale_x_continuous(name="eccentricity (degrees of visual angle)") + theme_bw()#
plt1#
ggsave("targDetModelEccOnly.pdf", width=10, height=5)#
#
plt2 <- ggplot(targPres2, aes(x=r, y=response, colour=beta)) + geom_smooth(method="glm", family="binomial", se=F) + geom_point(position = position_jitter(w = 0.15, h = 0.0))#
plt2 <- plt2 + scale_y_continuous(name="p(target detected)")  +scale_x_continuous(name="eccentricity (degrees of visual angle)") + theme_bw()#
plt2 = plt2 + facet_wrap(~participantNumber)#
ggsave("eccAccPltByPerson.pdf")#
#
m2 <- glm(data=targPres, response ~ beta * (x2+y2), family="binomial")
ceil(10*runif(5))
round(10*runif(5))
round(10*runif(5))
setwd("Documents/HemianopiaTraining/scripts/")
fixdat = readRDS(file="data/processedFixData.Rda")
fixdat = readRDS(file="../data/processedFixData.Rda")
fixdat = readRDS(file="../data/processedFixData.Rda")#
cbPalette <- c("#56B4E9", "#E69F00", "#0072B2", "#D55E00", "#CC79A7")#
nbins = 16#
bw = 360/nbins  #
# only look at TA trials#
fixdat = fixdat[fixdat$targSide=="absent",]#
fixdat$saccAng = (180/pi) * (fixdat$saccAng ) + 180#
fixdat$saccAng = ((fixdat$saccAng) %% 360)#
library(ggplot2)#
#
# first look at amplitude#
ampplot = ggplot(fixdat, aes(x=saccAmp)) + geom_density() + facet_grid(.~trialType)#
ampplot#
saccAngle = data.frame(theta=numeric(), med_amp=numeric(), count=numeric(), trialType=character())#
for (h in levels(fixdat$trialType))#
{#
    # do rest of bins#
    for (b in 1:nbins)#
    {#
        b1 = (b-1)*bw #
        b2 = (b)*bw #
        # get median saccade amplitude for these saccades#
        idx = which(fixdat$saccAng>=b1 & fixdat$saccAng<b2 & fixdat$trialType==h)#
        count = length(idx)/length(which(fixdat$trialType==h))#
        medsaccamp = median(fixdat$saccAmp[idx])#
        saccAngle = rbind(saccAngle, data.frame(theta=(b-1)*bw+bw/2, med_amp=medsaccamp, count=count, hemiType=h))#
   }#
}#
#rosepltAng <- ggplot(saccAngle, aes(x=theta, y=count)) + geom_bar(width=bw, stat="identity") #
#rosepltAng <- rosepltAng + scale_x_continuous(name=" ", limits=c(0,360), breaks = c(0, 45, 90, 135, 180, 225, 270, 315))#
#rosepltAng <- rosepltAng +scale_y_continuous(name=" ",breaks=NULL)+ coord_polar(start=0, direction=1)+theme_bw() + facet_grid(.~hemiType)#
#ggsave("../plots/roseplot.pdf", width=10, height=5)#
#rosepltAng <- ggplot(saccAngle, aes(x=theta, y=med_amp)) + geom_bar(width=bw, stat="identity") #
#rosepltAng <- rosepltAng + scale_x_continuous(name=" ", limits=c(0,360), breaks = c(0, 45, 90, 135, 180, 225, 270, 315))#
#rosepltAng <- rosepltAng +scale_y_continuous(name=" ",breaks=NULL)+ coord_polar(start=0, direction=1)+theme_bw() + facet_grid(.~hemiType)#
# get distribution for left v right saccades#
sideAngularWidth = 90#
#
intoBlindl = 270 - sideAngularWidth/2#
intoBlindu = 270 + sideAngularWidth/2#
intoSightl = 090 - sideAngularWidth/2#
intoSightu = 090 + sideAngularWidth/2#
#
fixdat$saccSide = NA#
fixdat$saccSide[which(fixdat$saccAng>=intoBlindl & fixdat$saccAng<=intoBlindu)] = "blind"#
fixdat$saccSide[which(fixdat$saccAng>=intoSightl & fixdat$saccAng<=intoSightu)] = "sight"#
fixdat$saccSide = as.factor(fixdat$saccSide)#
#
fixdat$saccAmp[which(fixdat$saccSide=="blind")] = -fixdat$saccAmp[which(fixdat$saccSide=="blind")]#
sideplt = ggplot(na.omit(fixdat), aes(x=saccAmp, fill=saccSide)) + geom_density(alpha = 1.0, trim=TRUE) + facet_grid(.~trialType)#
sideplt = sideplt  + scale_x_continuous(name="Saccadic Amplitude", limits=c(-1024,1024),   breaks=c(-1024, 0, 1024), minor_breaks=c(seq(-1024,1024, 128)))#
sideplt = sideplt  + theme_bw()+  theme(axis.text.x = element_blank(), axis.text.y = element_blank()) +scale_fill_manual(name="Target position", values=cbPalette)#
ggsave("plots/sightVblindSaccAmp.pdf", width=10, height=3)
fixdat = readRDS(file="../data/processedFixData.Rda")
nbins = 16#
bw = 360/nbins  #
# only look at TA trials#
fixdat = fixdat[fixdat$targSide=="absent",]
# first look at amplitude#
ampplot = ggplot(fixdat, aes(x=saccAmp)) + geom_density() + facet_grid(.~trialType)#
ampplot#
saccAngle = data.frame(theta=numeric(), med_amp=numeric(), count=numeric(), trialType=character())
summary(fixdat)
